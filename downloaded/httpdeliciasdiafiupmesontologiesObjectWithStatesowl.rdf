<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY dc "http://purl.org/dc/terms/" >
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owl2xml "http://www.w3.org/2006/12/owl2-xml#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY set "http://www.ontologydesignpatterns.org/cp/owl/set.owl#" >
    <!ENTITY situ "http://www.ontologydesignpatterns.org/cp/owl/situation.owl#" >
    <!ENTITY col "http://ontologydesignpatterns.org/cp/owl/collectionentity.owl#" >
    <!ENTITY cpannotationschema "http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#" >
]>


<rdf:RDF xmlns="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#"
     xml:base="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl"
     xmlns:dc="http://purl.org/dc/terms/"
     xmlns:situ="http://www.ontologydesignpatterns.org/cp/owl/situation.owl#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:col="http://ontologydesignpatterns.org/cp/owl/collectionentity.owl#"
     xmlns:cpannotationschema="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:set="http://www.ontologydesignpatterns.org/cp/owl/set.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <owl:Ontology rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl">
        <rdfs:label xml:lang="en">Object with states ontology</rdfs:label>
        <cpannotationschema:scenarios xml:lang="en">A sample scenario is the following. A software defect created in an issue tracker must have a creator and be associated to a certain software product. Once it is checked that the defect is reproducible, it must be assigned to some developer and have a certain priority. However, before checking the defect reproducilibty the defect must not have either asignee or priority.</cpannotationschema:scenarios>
        <cpannotationschema:hasIntent xml:lang="en">An object can have different states for which different restrictions apply. The goal of the pattern is to allow modelling the different states of an object and the restrictions on such object for its different states</cpannotationschema:hasIntent>
        <cpannotationschema:coversRequirements xml:lang="en">Objects in StateA must have at least one value for property property1</cpannotationschema:coversRequirements>
        <cpannotationschema:coversRequirements xml:lang="en">Objects in StateB must have at most one value for property property2</cpannotationschema:coversRequirements>
        <cpannotationschema:coversRequirements xml:lang="en">Objects in StateC must have exactly one value for property property3</cpannotationschema:coversRequirements>
        <cpannotationschema:coversRequirements xml:lang="en">Objects must have a unique state</cpannotationschema:coversRequirements>
        <cpannotationschema:coversRequirements xml:lang="en">Object states must belong to a single collection of non-duplicate elements (i.e., to a set)</cpannotationschema:coversRequirements>
        <cpannotationschema:coversRequirements xml:lang="en">An object can have three different states</cpannotationschema:coversRequirements>
        <rdfs:comment xml:lang="en">Ontology including the content ontology design pattern for modelling objects with states.</rdfs:comment>
        <cpannotationschema:hasConsequences xml:lang="en">The pattern requires modelling states as individuals instead of as literals.</cpannotationschema:hasConsequences>
        <cpannotationschema:coversRequirements xml:lang="en">The possible states are: StateA, StateB and StateC</cpannotationschema:coversRequirements>
        <dc:creator rdf:resource="http://www.garcia-castro.com/#me"/>
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#hasState -->

    <owl:ObjectProperty rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#hasState">
        <rdfs:label xml:lang="en">has state</rdfs:label>
        <rdfs:comment xml:lang="en">Defines the state of an object.</rdfs:comment>
        <rdfs:domain rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#Object"/>
        <rdfs:range rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#State"/>
        <owl:inverseOf rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#isStateOf"/>
        <rdfs:subPropertyOf rdf:resource="&situ;hasSetting"/>
    </owl:ObjectProperty>
    


    <!-- http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#isStateOf -->

    <owl:ObjectProperty rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#isStateOf">
        <rdfs:label xml:lang="en">is state of</rdfs:label>
        <rdfs:comment xml:lang="en">Defines the object that has an state</rdfs:comment>
        <rdfs:range rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#Object"/>
        <rdfs:domain rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#State"/>
        <rdfs:subPropertyOf rdf:resource="&situ;isSettingFor"/>
    </owl:ObjectProperty>
    


    <!-- http://ontologydesignpatterns.org/cp/owl/collectionentity.owl#isMemberOf -->

    <owl:ObjectProperty rdf:about="&col;isMemberOf"/>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/situation.owl#hasSetting -->

    <owl:ObjectProperty rdf:about="&situ;hasSetting"/>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/situation.owl#isSettingFor -->

    <owl:ObjectProperty rdf:about="&situ;isSettingFor"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/set.owl#size -->

    <owl:DatatypeProperty rdf:about="&set;size"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#Object -->

    <owl:Class rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#Object">
        <rdfs:label xml:lang="en">Object</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#hasState"/>
                <owl:onClass rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#State"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment xml:lang="en">Objects are entities that have different states and that in each state different restrictions on their properties apply.</rdfs:comment>
    </owl:Class>
    


    <!-- http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#State -->

    <owl:Class rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#State">
        <rdfs:label xml:lang="en">State</rdfs:label>
        <rdfs:subClassOf rdf:resource="&situ;Situation"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&col;isMemberOf"/>
                <owl:onClass rdf:resource="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#StateSet"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment xml:lang="en">States are the different states that an object can have. States must belong to a single collection of non-duplicate elements (i.e., to a set).</rdfs:comment>
    </owl:Class>
    


    <!-- http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#StateSet -->

    <owl:Class rdf:about="http://delicias.dia.fi.upm.es/ontologies/ObjectWithStates.owl#StateSet">
        <rdfs:label xml:lang="en">State set</rdfs:label>
        <rdfs:subClassOf rdf:resource="&set;Set"/>
        <rdfs:comment xml:lang="en">State sets are sets of states (i.e., collections of non-duplicate states).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/set.owl#Set -->

    <owl:Class rdf:about="&set;Set"/>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/situation.owl#Situation -->

    <owl:Class rdf:about="&situ;Situation"/>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->


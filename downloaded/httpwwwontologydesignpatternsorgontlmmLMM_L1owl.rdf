<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owl2xml "http://www.w3.org/2006/12/owl2-xml#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY DUL "http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#" >
    <!ENTITY IOLite "http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#" >
    <!ENTITY LMM_L1 "http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#" >
]>


<rdf:RDF xmlns="http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#"
     xml:base="http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:IOLite="http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:DUL="http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#"
     xmlns:LMM_L1="http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <owl:Ontology rdf:about="">
        <rdfs:label rdf:datatype="&xsd;string"
            >Lexical MetaModel Level 1</rdfs:label>
        <owl:versionInfo rdf:datatype="&xsd;string"
            >1.8
1.2 
- contains fine-tuning of cross-context relations. Now, the formalization pathway goes from expression to meaning to reference to formal entity to formal expression.
1.3 
- has all elements with English labels. Moreover, I added the relatedMeaning property, which allows to query across all object properties that have a Meaning in both domain and range.
1.4 
- has a new relation: hasInterpretant, based on Peirce&#39;s semiotics, which is applied between any two Expression(s), where the second provides an interpretive context for the first.
1.5 
- fixes a bug in the domain and range of isContextOf, now both generalized to dul:Entity, and consequently, Context is equivalently defined as anything that isContextOf some dul:Entity; some comments have also been edited.
1.6 
- added equivalentClass axiom between lmm:Meaning and dul:SocialObject (simplifies applications).
1.7 
- aligned all locally defined object properties to dul:associatedWith.
1.8
- simplified several restrictions in the semiotic pattern core, for improving reasoning performance.</owl:versionInfo>
        <rdfs:comment xml:lang="en"
            >This ontology is a composition of some content design patterns for the semiotic triangle.
Its structure is extracted from DOLCE-Ultralite (DOLCE+c.DnS), but it uses a different terminology, and explicitly defines the semiotic function: Expression is the semiotic term for dul:InformationObject, when they actually express or denote something; Meaning is the semiotic term for dul:SocialObject, when they are actually expressed by something, or are interpretation of something; Reference is the semiotic term for dul:Entity, when they are interpreted or denoted by something.
The denotes relation is equivalent to dul:isAbout, the expresses relation is imported from DOLCE Ultralite, and the hasInterpretation relation generalizes over: dul:isClassifiedBy, dul:isCoveredBy, dul:isDescribedBy, dul:isUnifiedBy, and dul:satisfies

Extensions to the triangle:
A typical extension of the semiotic triangle concerns the participation of agents: this is introduced by using the dul:conceptualizes relation, holding between a dul:Agent and a dul:SocialObject (the Meaning). 
An additional extension concerns semiotic context: this is provided by including four notions of &#39;Context&#39;: &#39;Paradigm&#39; (the context of the conceptualized meaning), &#39;KnowledgeCollective&#39; (the context of agents that conceptualize the paradigm), &#39;Cotext&#39; (the context of expressions), and dul:Situation (the context of denoted entities).
A final extension links semiotics to formal semantics: this is provided by reusing dul:FormalEntity, iol:isGroundingFor, iol:FormalExpression, iol:isAssignedTo, iol:FormalLanguage, etc.

The complete pattern allows to declare relations between Expression(s) and their Reference(s) (denotes), between Expression(s) and their Meaning (dul:expresses), between Meaning(s) and Reference(s) (isInterpretationOf), between Reference(s) and dul:FormalEntity(ies) (iol:isGroundingFor), between dul:FormalEntity(ies) and iol:FormalExpression(s) (iol:isAssignedTo).

This &#39;formalization pathway&#39; moves from Expression(s) to iol:FormalExpression(s) by taking into account both Meaning(s) and Referent(s). The informal denotation of Expression(s) is moved to a formal denotation (iol:isAssignedTo) of iol:FormalExpression(s).
For example: the Expression &#39;Mariachi&#39; dul:expresses the dul:Concept (Meaning) &#39;MexicanStreetSinger&#39; that isInterpretationOf the dul:Collection (Reference) &#39;TheStreetSingersFromMexico&#39;. &#39;TheStreetSingersFromMexico&#39; then iol:isGroundingFor e.g. the dul:Set (dul:FormalEntity) that includes all Mexican street singers, which iol:isAssignedTo e.g. the iol:FormalExpression &#39;owl:Class#Mariachi&#39;.

The formalization pathway enables a technique to move from/to socio-cognitive and formal semantics through denotation, in the Tarskian sense. As a matter of fact, translating directly a Meaning into a FormalEntity (or viceversa) is not always clearly implementable, while passing through an extensional grounding is easier and more accessible to intuition.

Among possible uses, information extraction, ontology learning, KOS reengineering, lexical semantics, etc. For example, statistical learning of instances for a dul:Concept would be modelled as the building of a dul:Collection that isInterpretationOf the dul:Concept, but also dul:isGroundingFor a dul:Set that iol:isAssignedTo e.g. an owl:Class.

An additional semiotic pattern is based on the hasInterpretant relation, which allows to link two Expression(s) (or dul:InformationRealization(s)), when the second one counts as a Meaning (or a relatedMeaning) of the first. 
In practice, this is implemented by allowing a relation between an Expression (or its realization), and whatever Meaning (or another dul:InformationRealization). Technically speaking, the correct path would be passing through another Expression used to express a Meaning for the first one:

(Exp1 hasInterpretant some (Exp2 and expresses some (Meaning and isExpressedBy some Exp1)))

or even:

(Exp1 hasInterpretant some (Exp2 and expresses some (Meaning and relatedMeaning some (Meaning and isExpressedBy some Exp1))))

but given the expressive power of OWL, which lacks co-reference, this is the best sub-optimal solution.</rdfs:comment>
        <owl:imports rdf:resource="http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#actsFor -->

    <owl:ObjectProperty rdf:about="&DUL;actsFor">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#actsThrough -->

    <owl:ObjectProperty rdf:about="&DUL;actsThrough">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#associatedWith -->

    <owl:ObjectProperty rdf:about="&DUL;associatedWith"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#characterizes -->

    <owl:ObjectProperty rdf:about="&DUL;characterizes">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies -->

    <owl:ObjectProperty rdf:about="&DUL;classifies">
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#concretelyExpresses -->

    <owl:ObjectProperty rdf:about="&DUL;concretelyExpresses">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretant"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#covers -->

    <owl:ObjectProperty rdf:about="&DUL;covers">
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#describes -->

    <owl:ObjectProperty rdf:about="&DUL;describes">
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#expresses -->

    <owl:ObjectProperty rdf:about="&DUL;expresses">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretant"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasComponent -->

    <owl:ObjectProperty rdf:about="&DUL;hasComponent"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasLocation -->

    <owl:ObjectProperty rdf:about="&DUL;hasLocation">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasMember -->

    <owl:ObjectProperty rdf:about="&DUL;hasMember">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasPart -->

    <owl:ObjectProperty rdf:about="&DUL;hasPart">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParticipant -->

    <owl:ObjectProperty rdf:about="&DUL;hasParticipant">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasSetting -->

    <owl:ObjectProperty rdf:about="&DUL;hasSetting">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#introduces -->

    <owl:ObjectProperty rdf:about="&DUL;introduces">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isAbout -->

    <owl:ObjectProperty rdf:about="&DUL;isAbout"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isCharacterizedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isCharacterizedBy">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isClassifiedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isClassifiedBy">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isConceptUsedIn -->

    <owl:ObjectProperty rdf:about="&DUL;isConceptUsedIn">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isConcretelyExpressedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isConcretelyExpressedBy">
        <rdfs:subPropertyOf rdf:resource="#isInterpretantFor"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isCoveredBy -->

    <owl:ObjectProperty rdf:about="&DUL;isCoveredBy">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDescribedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isDescribedBy">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isExpressedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isExpressedBy">
        <rdfs:subPropertyOf rdf:resource="#isInterpretantFor"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isIntroducedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isIntroducedBy">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isLocationOf -->

    <owl:ObjectProperty rdf:about="&DUL;isLocationOf">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isMemberOf -->

    <owl:ObjectProperty rdf:about="&DUL;isMemberOf">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isPartOf -->

    <owl:ObjectProperty rdf:about="&DUL;isPartOf">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isParticipantIn -->

    <owl:ObjectProperty rdf:about="&DUL;isParticipantIn">
        <rdfs:subPropertyOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isReferenceOf -->

    <owl:ObjectProperty rdf:about="&DUL;isReferenceOf"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isRelatedToConcept -->

    <owl:ObjectProperty rdf:about="&DUL;isRelatedToConcept">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isRelatedToDescription -->

    <owl:ObjectProperty rdf:about="&DUL;isRelatedToDescription">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isSatisfiedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isSatisfiedBy">
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isSettingFor -->

    <owl:ObjectProperty rdf:about="&DUL;isSettingFor">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isSpecializedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isSpecializedBy">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isUnifiedBy -->

    <owl:ObjectProperty rdf:about="&DUL;isUnifiedBy">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#satisfies -->

    <owl:ObjectProperty rdf:about="&DUL;satisfies">
        <rdfs:subPropertyOf rdf:resource="#hasInterpretation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#specializes -->

    <owl:ObjectProperty rdf:about="&DUL;specializes">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#unifies -->

    <owl:ObjectProperty rdf:about="&DUL;unifies">
        <rdfs:subPropertyOf rdf:resource="#isInterpretationOf"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#usesConcept -->

    <owl:ObjectProperty rdf:about="&DUL;usesConcept">
        <rdfs:subPropertyOf rdf:resource="#isContextOf"/>
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#hasCulturalGrounding -->

    <owl:ObjectProperty rdf:about="&IOLite;hasCulturalGrounding">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#hasCulturalMixingWith -->

    <owl:ObjectProperty rdf:about="&IOLite;hasCulturalMixingWith">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#hasGrounding -->

    <owl:ObjectProperty rdf:about="&IOLite;hasGrounding">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relation between a dul:Entity and a dul:FormalEntity, which can be used to give a semiotic (&#39;natural&#39;) counterpart to a formal entity, such as a Class, a Relation, a SetBuilder, etc. See also the ontology: FormalSemantics.owl</rdfs:comment>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#isCulturalGroundingFor -->

    <owl:ObjectProperty rdf:about="&IOLite;isCulturalGroundingFor">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#isGroundingFor -->

    <owl:ObjectProperty rdf:about="&IOLite;isGroundingFor">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relation between a dul:Entity and a dul:FormalEntity, which can be used to give a semiotic (&#39;natural&#39;) counterpart to a formal entity, such as a Class, a Relation, a SetBuilder, etc. See also the ontology: FormalSemantics.owl</rdfs:comment>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#metaphoricallyBlendsWith -->

    <owl:ObjectProperty rdf:about="&IOLite;metaphoricallyBlendsWith">
        <rdfs:subPropertyOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#denotes -->

    <owl:ObjectProperty rdf:about="#denotes">
        <rdfs:label xml:lang="en">denotes</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relation between expressions and any Entity (including expressions). 
It can be used to talk about e.g. entities denoted by proper nouns: the proper noun &#39;Leonardo da Vinci&#39; denotes the Person Leonardo da Vinci; as well as to talk about sets of entities that can be described by a common noun: the common noun &#39;person&#39; denotes the collection of all persons in a domain of discourse.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;isAbout"/>
        <rdfs:domain rdf:resource="#Expression"/>
        <rdfs:range rdf:resource="#Reference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#hasContext -->

    <owl:ObjectProperty rdf:about="#hasContext">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A catch-all property for all notions of Context considered in LMM.</rdfs:comment>
        <rdfs:domain rdf:resource="&DUL;Entity"/>
        <rdfs:range rdf:resource="&DUL;Entity"/>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#hasInterpretant -->

    <owl:ObjectProperty rdf:about="#hasInterpretant">
        <rdfs:label xml:lang="en"
            >has interpretant</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The Peircean interpretant relation, widely adopted in semiotics: a dul:InformationObject isInterpretantFor another, e.g. fourLeggedFriendOfHumans isInterpretantFor dog. 
Synonymy, associativity, and even topical proximity are all sources for interpretants, e.g.: domestic dog isInterpretantFor dog (synonymy); bark isInterpretantFor dog (associativity); veterinary isInterpretantFor dog (topical proximity).
Semantic mechanisms such as metonymy depend on the interpretant relation.
The interpretant relation is here taken as very broad, also accepting InformationRealization(s) as interpretants.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <owl:inverseOf rdf:resource="#isInterpretantFor"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&DUL;InformationRealization"/>
                    <rdf:Description rdf:about="#Expression"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&DUL;InformationRealization"/>
                    <rdf:Description rdf:about="#Meaning"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#hasInterpretation -->

    <owl:ObjectProperty rdf:about="#hasInterpretation">
        <rdfs:label xml:lang="en"
            >has interpretation</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The relation between a Meaning and a Reference : a Meaning gives unity to a Collection of entities.
A same Reference can be given different interpretations, for example, an old cradle can be given a unifying Meaning based on the original aesthetic design, the functionality it was built for, or a new aesthetic functionality in which it can be used as a flower pot.
This relation allows to generalize over the following DOLCE-Ultralite relations: dul:isClassifedBy, dul:isCoveredBy, dul:isDescribedBy, dul:isUnifiedBy, and dul:satisfies</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <rdfs:range rdf:resource="#Meaning"/>
        <rdfs:domain rdf:resource="#Reference"/>
        <owl:inverseOf rdf:resource="#isInterpretationOf"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#isContextOf -->

    <owl:ObjectProperty rdf:about="#isContextOf">
        <rdfs:domain rdf:resource="&DUL;Entity"/>
        <rdfs:range rdf:resource="&DUL;Entity"/>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <owl:inverseOf rdf:resource="#hasContext"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#isDenotedBy -->

    <owl:ObjectProperty rdf:about="#isDenotedBy">
        <rdfs:label xml:lang="en">is denoted by</rdfs:label>
        <rdfs:subPropertyOf rdf:resource="&DUL;isReferenceOf"/>
        <rdfs:range rdf:resource="#Expression"/>
        <rdfs:domain rdf:resource="#Reference"/>
        <owl:inverseOf rdf:resource="#denotes"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#isInterpretantFor -->

    <owl:ObjectProperty rdf:about="#isInterpretantFor">
        <rdfs:label xml:lang="en"
            >is interpretant for</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The Peircean interpretant relation, widely adopted in semiotics: a dul:InformationObject isInterpretantFor another, e.g. fourLeggedFriendOfHumans isInterpretantFor dog. 
Synonymy, associativity, and even topical proximity are all sources for interpretants, e.g.: domestic dog isInterpretantFor dog (synonymy); bark isInterpretantFor dog (associativity); veterinary isInterpretantFor dog (topical proximity).
Semantic mechanisms such as metonymy depend on the interpretant relation.
The interpretant relation is here taken as very broad, also accepting realization of information as interpretants.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&DUL;InformationRealization"/>
                    <rdf:Description rdf:about="#Expression"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&DUL;InformationRealization"/>
                    <rdf:Description rdf:about="#Meaning"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#isInterpretationOf -->

    <owl:ObjectProperty rdf:about="#isInterpretationOf">
        <rdfs:label xml:lang="en"
            >is interpretation of</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The relation between a Meaning and a Reference : a Meaning gives unity to an Entity or to a Collection of entities.
A same Reference can be given different interpretations, for example, an old cradle can be given a unifying Meaning based on the original aesthetic design, the functionality it was built for, or a new aesthetic functionality in which it can be used as a flower pot.
This relation allows to generalize over the following DOLCE-Ultralite relations: dul:classifies, dul:covers, dul:describes, dul:unifies, and dul:isSatisfiedBy</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <rdfs:domain rdf:resource="#Meaning"/>
        <rdfs:range rdf:resource="#Reference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#relatedMeaning -->

    <owl:ObjectProperty rdf:about="#relatedMeaning">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdfs:label xml:lang="en">related meaning</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relation between any two meanings.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&DUL;associatedWith"/>
        <rdfs:domain rdf:resource="#Meaning"/>
        <rdfs:range rdf:resource="#Meaning"/>
        <owl:inverseOf rdf:resource="#relatedMeaning"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Collection -->

    <owl:Class rdf:about="&DUL;Collection"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Community -->

    <owl:Class rdf:about="&DUL;Community">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&DUL;actsThrough"/>
                <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">3</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description -->

    <owl:Class rdf:about="&DUL;Description">
        <rdfs:subClassOf rdf:resource="#Context"/>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Entity -->

    <owl:Class rdf:about="&DUL;Entity"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationObject -->

    <owl:Class rdf:about="&DUL;InformationObject"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationRealization -->

    <owl:Class rdf:about="&DUL;InformationRealization"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Place -->

    <owl:Class rdf:about="&DUL;Place">
        <rdfs:subClassOf rdf:resource="#Context"/>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Situation -->

    <owl:Class rdf:about="&DUL;Situation">
        <rdfs:subClassOf rdf:resource="#Context"/>
        <rdfs:subClassOf rdf:resource="#Reference"/>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#SocialObject -->

    <owl:Class rdf:about="&DUL;SocialObject">
        <owl:equivalentClass rdf:resource="#Meaning"/>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#LinguisticObject -->

    <owl:Class rdf:about="&IOLite;LinguisticObject"/>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#CoText -->

    <owl:Class rdf:about="#CoText">
        <rdfs:label rdf:datatype="&xsd;string">Cotesto {it}</rdfs:label>
        <rdfs:label xml:lang="en">Co-text</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#Context"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&DUL;hasMember"/>
                        <owl:someValuesFrom rdf:resource="#Expression"/>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&DUL;isUnifiedBy"/>
                        <owl:someValuesFrom rdf:resource="#ConstructionRule"/>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&DUL;Collection"/>
        <rdfs:subClassOf rdf:resource="&IOLite;LinguisticObject"/>
        <rdfs:subClassOf rdf:resource="#Context"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The context of an Expression .
A CoText is a neighborhood of a certain chunk of text, which can be built based on a syntactic rule (all words from the sentence
where the chunk occurs), an associative rule (all terms that are related to the chunk across the texts of a corpus, 
given a certain statistical threshold), etc.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#ConstructionRule -->

    <owl:Class rdf:about="#ConstructionRule">
        <rdfs:subClassOf rdf:resource="&DUL;Description"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A description of how to build an entity. For example, a logical rule, a productive rule, a statistical algorithm, etc.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#Context -->

    <owl:Class rdf:about="#Context">
        <rdfs:label rdf:datatype="&xsd;string">Contesto {it}</rdfs:label>
        <rdfs:label xml:lang="en">Context</rdfs:label>
        <rdfs:label xml:lang="it">Contesto</rdfs:label>
        <owl:equivalentClass>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#isContextOf"/>
                <owl:someValuesFrom rdf:resource="&DUL;Entity"/>
            </owl:Restriction>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&DUL;Entity"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Any context, such as:

- dul:Situation (the circumstantial context of denoted Entity(ies))
- Paradigm (the cultural context of expressed Meaning(s))
- CoText (the informational context of Expression(s))
- dul:Description (the relational context of Concept(s))
- KnowledgeCommunity (the social context of conceptualizing Agent(s))
- dul:Place (the spatial context of Entity(ies))

but also a dul:PhysicalPlace, a dul:Event, etc. In practice, everything that is said to be a context for something else.

Notice that certain contexts can be given independently from the entities that are contextualized (e.g. the ones listed above), others need a core entity and a rule to build its neighborhood, and still others can be classified as such when a certain relation is applied to them.
For example, a scientific theory is a dul:Description that works as a context for its dul:Concept(s), and can be given independently from the concepts, which can remain implicit to a certain extent. On the contrary, a CoText is actually a neighborhood of a certain chunk of text, which can be built based on a syntagmatic rule (all words from the sentence where the chunk occurs), an associative rule (all terms that are related to the chunk across the texts of a corpus, given a certain statistical threshold), etc.
Contexts can also emerge based on what relations are considered &quot;context triggers&quot;. For example, in this ontology very different relations: part, participation, setting, membership, acting for, localization, etc. are considered context triggers by adding owl:subPropertyOf axioms to the property: isContextOf. Since the class Context has an equivalent axiom to isContextOf someValuesFrom dul:Entity, everything has a property that is declared subPropertyOf isContextOf, will be inferred to be a Context as well.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#Expression -->

    <owl:Class rdf:about="#Expression">
        <rdfs:label rdf:datatype="&xsd;string">Expression</rdfs:label>
        <rdfs:label xml:lang="en">Expression</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&DUL;expresses"/>
                        <owl:someValuesFrom rdf:resource="#Meaning"/>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="#denotes"/>
                        <owl:someValuesFrom rdf:resource="#Reference"/>
                    </owl:Restriction>
                </owl:unionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&DUL;InformationObject"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Any information that either dul:expresses a Meaning or denotes a Reference</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#KnowledgeCommunity -->

    <owl:Class rdf:about="#KnowledgeCommunity">
        <rdfs:label rdf:datatype="&xsd;string"
            >Comunit&#224; di conoscenza {it}</rdfs:label>
        <rdfs:label xml:lang="en"
            >Knowledge community</rdfs:label>
        <rdfs:subClassOf rdf:resource="&DUL;Community"/>
        <rdfs:subClassOf rdf:resource="#Context"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The context of agents that conceptualize a same Paradigm. This restriction cannot be represented in OWL in general, but should be encoded for specific knowledge communities by stating the specific paradigm that agents acting for it must conceptualize.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#Meaning -->

    <owl:Class rdf:about="#Meaning">
        <rdfs:label rdf:datatype="&xsd;string">Meaning</rdfs:label>
        <rdfs:label xml:lang="en">Meaning</rdfs:label>
        <owl:equivalentClass>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&DUL;isExpressedBy"/>
                <owl:someValuesFrom rdf:resource="#Expression"/>
            </owl:Restriction>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&DUL;SocialObject"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&DUL;isExpressedBy"/>
                <owl:someValuesFrom rdf:resource="#Expression"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Any conceptualization that dul:isExpressedBy an Expression, or isInterpretationOf a Reference</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#Paradigm -->

    <owl:Class rdf:about="#Paradigm">
        <rdfs:label rdf:datatype="&xsd;string">Paradigma {it}</rdfs:label>
        <rdfs:label xml:lang="en">Paradigm</rdfs:label>
        <rdfs:subClassOf rdf:resource="&DUL;Description"/>
        <rdfs:subClassOf rdf:resource="#Context"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&DUL;hasComponent"/>
                <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&DUL;hasComponent"/>
                <owl:someValuesFrom rdf:resource="#Meaning"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >The context of an expressed Meaning</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/ont/lmm/LMM_L1.owl#Reference -->

    <owl:Class rdf:about="#Reference">
        <rdfs:label rdf:datatype="&xsd;string">Reference</rdfs:label>
        <rdfs:label xml:lang="en">Reference</rdfs:label>
        <owl:equivalentClass>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="#hasInterpretation"/>
                        <owl:someValuesFrom rdf:resource="#Meaning"/>
                    </owl:Restriction>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="#isDenotedBy"/>
                        <owl:someValuesFrom rdf:resource="#Expression"/>
                    </owl:Restriction>
                </owl:unionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&DUL;Entity"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Any Entity that isDenotedBy an Expression, or that hasInterpretation some Meaning</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.w3.org/2002/07/owl#Thing -->

    <owl:Class rdf:about="&owl;Thing"/>
</rdf:RDF>



<!-- Generated by the OWL API (version 2.2.1.1138) http://owlapi.sourceforge.net -->

